/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package gym;

import static gym.Gym.employees;
import static gym.Gym.members;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class frmBookTrainer extends javax.swing.JFrame {

    private DefaultListModel<String> memberListModel;
    private DefaultListModel<String> trainerListModel;
    private Member selectedMember;
    private Trainer selectedTrainer;
    
    private frmViewBooking viewBookingFrame;
    
    public frmBookTrainer() {
        initComponents();
        memberListModel = new DefaultListModel<>();
        trainerListModel = new DefaultListModel<>();
        listOfPremMem.setModel(memberListModel);
        listOfTrainers.setModel(trainerListModel);
        
        viewBookingFrame = new frmViewBooking();
        
        populateMemberList();
        populateTrainerList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBookTrainer = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblMemName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblMemID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOfPremMem = new javax.swing.JList<>();
        btnBook = new javax.swing.JButton();
        btnFindMem = new javax.swing.JButton();
        btnFindEmp = new javax.swing.JButton();
        lblEmpName = new javax.swing.JLabel();
        txtEmpName = new javax.swing.JTextField();
        lblEmpID = new javax.swing.JLabel();
        txtEmpID = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listOfTrainers = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBookTrainer.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        lblBookTrainer.setText("BOOK TRAINER");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblMemName.setText("Name");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        lblMemID.setText("ID");

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        listOfPremMem.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listOfPremMemValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listOfPremMem);

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        btnFindMem.setText("Find");
        btnFindMem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindMemActionPerformed(evt);
            }
        });

        btnFindEmp.setText("Find");
        btnFindEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindEmpActionPerformed(evt);
            }
        });

        lblEmpName.setText("Name");

        txtEmpName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpNameActionPerformed(evt);
            }
        });

        lblEmpID.setText("ID");

        txtEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpIDActionPerformed(evt);
            }
        });

        listOfTrainers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listOfTrainersValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listOfTrainers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(242, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(lblBookTrainer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMemName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFindMem)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnFindEmp)
                                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnBack)
                        .addGap(231, 231, 231)
                        .addComponent(btnBook)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBookTrainer)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblMemID)
                        .addGap(18, 18, 18)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(lblMemName)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnFindMem))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(lblEmpID)
                        .addGap(18, 18, 18)
                        .addComponent(txtEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(lblEmpName)
                        .addGap(18, 18, 18)
                        .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnFindEmp))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBook)
                        .addGap(42, 42, 42))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        dispose();
        new frmMainMenu().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
  
        /*String memberName = listOfPremMem.getSelectedValue().toString();
        String trainerName = listOfTrainers.getSelectedValue().toString();
        
        // Call addBooking method of frmViewBooking to add the booking
        frmViewBooking.addBooking(memberName, trainerName);
        
        // Optionally, display the frmViewBooking frame
    
    if (selectedMember == null || selectedTrainer == null) {
            JOptionPane.showMessageDialog(this, "Please select a premium member and a trainer.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Book trainer for selected member (logic to create a booking record)
        viewBookingFrame.addBooking(selectedMember.getName(), selectedTrainer.getName());
        // Example: Display a message
        JOptionPane.showMessageDialog(this, "Trainer booked for member.", "Success", JOptionPane.INFORMATION_MESSAGE);
      */ 
     if (selectedMember == null || selectedTrainer == null) {
        JOptionPane.showMessageDialog(this, "Please select a premium member and a trainer.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Add the booking to the frmViewBooking instance
    viewBookingFrame.addBooking(selectedMember.getName(), selectedTrainer.getName());

    // Show confirmation message
    JOptionPane.showMessageDialog(this, "Trainer booked for member.", "Success", JOptionPane.INFORMATION_MESSAGE);

    viewBookingFrame.setVisible(true);
    }//GEN-LAST:event_btnBookActionPerformed

    private void btnFindMemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindMemActionPerformed
        String memberId = txtID.getText();
        String memberName= txtName.getText();
        
        memberListModel.clear();
        
        for (Member member : members) {
            if (member.membership.equalsIgnoreCase("premium") &&
                (member.getMemberId().equals(memberId) || member.getName().equalsIgnoreCase(memberName))) {
                memberListModel.addElement(member.toString());
            }
        }
        if (memberListModel.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Premium member not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
       /* 
        DefaultListModel<String> list = new DefaultListModel<>();
        
        for(Member member : members)  
            {
            if(member.membership.equalsIgnoreCase("premium") &&(member.getMemberId().equals(memberId) || member.getName().equalsIgnoreCase(memberName)))
                list.addElement(member.toString());
                }     
        
       if (list.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Member not found.", "Error", JOptionPane.ERROR_MESSAGE);
            btnBook.setEnabled(false);
        } else {
            listOfPremMem.setModel(list);
            btnBook.setEnabled(true);
        } 
        */
    }//GEN-LAST:event_btnFindMemActionPerformed

    private void btnFindEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindEmpActionPerformed
        String empId = txtEmpID.getText().trim();
        String empName = txtEmpName.getText().trim();
        
        trainerListModel.clear();
        selectedTrainer = null;
        
        for (Employee employee : employees) {
            if (employee.getRole().equalsIgnoreCase("trainer") &&
            (employee.getEmployeeId().equalsIgnoreCase(empId) || employee.getName().equalsIgnoreCase(empName))) {
            trainerListModel.addElement(employee.toString());
             }   
        }   

        if (trainerListModel.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No trainers available.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    
          
        
    }//GEN-LAST:event_btnFindEmpActionPerformed

    private void txtEmpNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpNameActionPerformed

    private void txtEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpIDActionPerformed

    private void listOfPremMemValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listOfPremMemValueChanged
        if (!evt.getValueIsAdjusting()) {
            int selectedIndex = listOfPremMem.getSelectedIndex();
            if (selectedIndex != -1) {
                // Retrieve the selected premium member
                String selectedMemberString = listOfPremMem.getSelectedValue();
            for (Member member : members) {
                if (member.toString().equals(selectedMemberString)) {
                    selectedMember = member;
                    break;
                }
            }
        }
      }
        
    }//GEN-LAST:event_listOfPremMemValueChanged

    private void listOfTrainersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listOfTrainersValueChanged
            if (!evt.getValueIsAdjusting()) {
        int selectedIndex = listOfTrainers.getSelectedIndex();
        if (selectedIndex != -1) {
            String selectedTrainerString = listOfTrainers.getSelectedValue();
            for (Employee employee : employees) {
                if (employee.getRole().equalsIgnoreCase("trainer") &&
                    selectedTrainerString.equals(employee.toString())) {
                    selectedTrainer = (Trainer) employee;
                    break;
                }
            }
            if (selectedTrainer == null) {
                JOptionPane.showMessageDialog(this, "Please select a trainer.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    }//GEN-LAST:event_listOfTrainersValueChanged
                
    private void populateMemberList() {
        memberListModel.clear();
        for (Member member : members) {
            if (member.membership.equalsIgnoreCase("Premium")) {
                memberListModel.addElement(member.toString());
            }
        }
    }

    private void populateTrainerList() {
        trainerListModel.clear();
        for (Employee employee : employees) {
            if (employee.getRole().equalsIgnoreCase("trainer")) {
                trainerListModel.addElement(employee.toString());
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBookTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBookTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBookTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBookTrainer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBookTrainer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnFindEmp;
    private javax.swing.JButton btnFindMem;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBookTrainer;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpName;
    private javax.swing.JLabel lblMemID;
    private javax.swing.JLabel lblMemName;
    private javax.swing.JList<String> listOfPremMem;
    private javax.swing.JList<String> listOfTrainers;
    private javax.swing.JTextField txtEmpID;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
